import { parseUnits } from "ethers/lib/utils";
import { NETWORK_ADDRESSES } from "src/networkAddresses";
import { LzChainId, ProposalMeta, ProposalType } from "src/types";
import { makeProposal } from "src/utils";

const { zksyncmainnet } = NETWORK_ADDRESSES;
export const wUSDM = "0xA900cbE7739c96D2B153a273953620A701d5442b";
export const vwUSDM = "0x183dE3C349fCf546aAe925E1c7F364EA6FB4033c";
export const AMOUNT = parseUnits("147630", 18);
export const wUSDMMLiquidator = "0x0192ffefb1dddb9d30afcccb12f60ceaad490807";
export const COMPTROLLER = "0xddE4D098D9995B659724ae6d5E3FB9681Ac941B1";

export const vip523 = () => {
  const meta: ProposalMeta = {
    version: "v2",
    title: "VIP-523 Partial Liquidity Restoration for wUSDM on Venus ZKsync",
    description: `If passed, this VIP will perform the plan described in the Community proposal “[[Proposal] Second Phase of wUSDM Liquidity Restoration on Venus ZKsync](https://community.venus.io/t/proposal-second-phase-of-wusdm-liquidity-restoration-on-venus-zksync/5155)” and [the associated snapshot](https://snapshot.box/#/s:venus-xvs.eth/proposal/0x08208c6d0ad3e067eb2144a4603ab81abc5396ea705138e2e3356a9e7a8e44cd):

1. Withdraw 147,630 [wUSDM](https://explorer.zksync.io/token/0xA900cbE7739c96D2B153a273953620A701d5442b) from the [Venus Treasury on ZKSync](https://explorer.zksync.io/address/0xB2e9174e23382f7744CebF7e0Be54cA001D95599), and supply them to the Venus wUSDM market, on behalf of the [WUSDMLiquidator](https://explorer.zksync.io/address/0x0192ffefb1dddb9d30afcccb12f60ceaad490807) contract (wallet owned by the Venus Protocol).
2. Disable the [Automatic Income Allocation](https://docs-v4.venus.io/whats-new/automatic-income-allocation) feature for a year in the [wUSDM market](https://explorer.zksync.io/address/0x183dE3C349fCf546aAe925E1c7F364EA6FB4033c). This will keep the injected funds available in the market, to be withdrawn by the legit suppliers.

The funds to be withdrawn from the Treasury are the reserves generated by the Venus wUSDM market from its inception. Those reserves were transferred to the [Protocol Share Reserve](https://explorer.zksync.io/address/0xA1193e941BDf34E858f7F276221B4886EfdD040b) after injecting the liquidity in the [VIP-502 [ZKsync] Partial Liquidity Restoration for wUSDM on Venus ZKsync (2/2)](https://app.venus.io/#/governance/proposal/502?chainId=56). So, this VIP is actually reusing part of the 370,732 wUSDM injected in the VIP-502, re-injecting them into the market after being transferred to the Protocol Share Reserve first, and to the Venus Treasury later, by the Automatic Income Allocation feature.

#### Security and additional considerations

We applied the following security procedures:

- **Audits**: [Certik](https://www.certik.com/), [Quantstamp](https://quantstamp.com/) and [Fairyproof](https://www.fairyproof.com/) have audited the WUSDMLiquidator contract
- **VIP execution simulation**: in a simulation environment, validating the execution of the described plan
- No contract upgrades are performed by this VIP.

#### Audit reports

- [Certik audit audit report (2025/04/29)](https://github.com/VenusProtocol/isolated-pools/blob/f2043d3eaba06e10feb61fc0dfcba5160b4ea98a/audits/134_wusdmLiquidator_certik_20250429.pdf)
- [Quantstamp audit report (2025/05/23)](https://github.com/VenusProtocol/isolated-pools/blob/f2043d3eaba06e10feb61fc0dfcba5160b4ea98a/audits/135_wusdmLiquidator_quantstamp_20250523.pdf)
- [Fairyproof audit report (2025/05/08)](https://github.com/VenusProtocol/isolated-pools/blob/f2043d3eaba06e10feb61fc0dfcba5160b4ea98a/audits/136_wusdmLiquidator_fairyproof_20250508.pdf)

#### References

- [VIP simulation](https://github.com/VenusProtocol/vips/pull/582)
- [VIP-502 [ZKsync] Partial Liquidity Restoration for wUSDM on Venus ZKsync (2/2)](https://app.venus.io/#/governance/proposal/502?chainId=56)`,
    forDescription: "I agree that Venus Protocol should proceed with this proposal",
    againstDescription: "I do not think that Venus Protocol should proceed with this proposal",
    abstainDescription: "I am indifferent to whether Venus Protocol proceeds or not",
  };

  return makeProposal(
    [
      {
        target: zksyncmainnet.VTREASURY,
        signature: "withdrawTreasuryToken(address,uint256,address)",
        params: [wUSDM, AMOUNT, zksyncmainnet.NORMAL_TIMELOCK],
        dstChainId: LzChainId.zksyncmainnet,
      },
      {
        target: vwUSDM,
        signature: "setReduceReservesBlockDelta(uint256)",
        params: [31536000],
        dstChainId: LzChainId.zksyncmainnet,
      },
      {
        target: wUSDM,
        signature: "approve(address,uint256)",
        params: [vwUSDM, AMOUNT],
        dstChainId: LzChainId.zksyncmainnet,
      },
      {
        target: COMPTROLLER,
        signature: "setActionsPaused(address[],uint8[],bool)",
        params: [[vwUSDM], [0], false],
        dstChainId: LzChainId.zksyncmainnet,
      },
      {
        target: vwUSDM,
        signature: "mintBehalf(address,uint256)",
        params: [wUSDMMLiquidator, AMOUNT],
        dstChainId: LzChainId.zksyncmainnet,
      },
      {
        target: wUSDM,
        signature: "approve(address,uint256)",
        params: [vwUSDM, 0],
        dstChainId: LzChainId.zksyncmainnet,
      },
      {
        target: COMPTROLLER,
        signature: "setActionsPaused(address[],uint8[],bool)",
        params: [[vwUSDM], [0], true],
        dstChainId: LzChainId.zksyncmainnet,
      },
    ],
    meta,
    ProposalType.REGULAR,
  );
};

export default vip523;
