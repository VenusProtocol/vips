import { ProposalType } from "../../../src/types";
import { makeProposal } from "../../../src/utils";
import { CONVERTER_NETWORK } from "./Addresses";
import { acceptOwnershipCommandsAllConverters, callPermissionCommandsAllConverter } from "./commands";

const XVS_VAULT_TREASURY = "0x269ff7818DB317f60E386D2be0B259e1a324a40a";

export const vip245 = () => {
  const meta = {
    version: "v2",
    title: "VIP-245 Token converter: deployment stage 1/2",
    description: `#### Summary

If passed, this VIP will transfer to the [Normal Timelock](https://bscscan.com/address/0x939bD8d64c0A9583A7Dcea9933f7b21697ab6396) the ownership of the contracts involved in the Token Converter subsystem, and it will configure the needed permissions for the rest of the timelock and guardian contracts.

#### Description

This VIP is part of the proposal [Automatic Income Allocation & Token Converter](https://community.venus.io/t/automatic-income-allocation-token-converter/3702), published in the Venus community forum. Specifically, this VIP is related to the Token Converter subsystem.

There will be a second VIP for the Token Converter, proposed in the following days, where the configuration will be completed.

#### Security and additional considerations

We applied the following security procedures for this upgrade:

- **Configuration post VIP**: in a simulation environment, validating the ownerships of the Token Converter contracts are the expected one after the VIP. Moreover, the second VIP was simulated and the expected configuration was checked.
- **Token conversions**: in a simulation environment, validating the token reserves generated by the protocol can be converted to the expected tokens following the tokenomics.
- **Deployment on testnet**: the same contracts were deployed and configured to testnet, and used in the Venus Protocol testnet deployment
- **Audits**: OpenZeppelin, Certik, Peckshield and Fairyproof have audited the deployed code. Additionally, OpenZeppelin and Certik audited the private conversions feature.

#### Audit reports

- Token converters
    - [OpenZeppelin audit report (2023/10/10)](https://github.com/VenusProtocol/protocol-reserve/blob/f31dc8bb433f1cff6c2124d27742004d82b24c32/audits/066_tokenConverter_openzeppelin_20231010.pdf)
    - [Certik audit audit report (2023/11/07)](https://github.com/VenusProtocol/protocol-reserve/blob/f31dc8bb433f1cff6c2124d27742004d82b24c32/audits/074_tokenConverter_certik_20231107.pdf)
    - [Peckshield audit report (2023/09/27)](https://github.com/VenusProtocol/protocol-reserve/blob/f31dc8bb433f1cff6c2124d27742004d82b24c32/audits/068_tokenConverter_peckshield_20230927.pdf)
    - [Fairyproof audit report (2023/08/28)](https://github.com/VenusProtocol/protocol-reserve/blob/f31dc8bb433f1cff6c2124d27742004d82b24c32/audits/067_tokenConverter_fairyproof_20230828.pdf)
- Private conversions
    - [Certik audit report (2023/11/27)](https://github.com/VenusProtocol/protocol-reserve/blob/f31dc8bb433f1cff6c2124d27742004d82b24c32/audits/081_privateConversions_certik_20231127.pdf)
    - [OpenZeppelin report (2024/01/09)](https://github.com/VenusProtocol/protocol-reserve/blob/f31dc8bb433f1cff6c2124d27742004d82b24c32/audits/082_privateConversions_openzeppelin_20240109.pdf)

#### Deployed contracts to main net

- [RiskFundConverter](https://bscscan.com/address/0xA5622D276CcbB8d9BBE3D1ffd1BB11a0032E53F0)
- [XVSVaultTreasury](https://bscscan.com/address/0x269ff7818DB317f60E386D2be0B259e1a324a40a)
- [SingleTokenConverterBeacon](https://bscscan.com/address/0x4c9D57b05B245c40235D720A5f3A592f3DfF11ca)
- [USDTPrimeConverter](https://bscscan.com/address/0xD9f101AA67F3D72662609a2703387242452078C3)
- [USDCPrimeConverter](https://bscscan.com/address/0xa758c9C215B6c4198F0a0e3FA46395Fa15Db691b)
- [BTCBPrimeConverter](https://bscscan.com/address/0xE8CeAa79f082768f99266dFd208d665d2Dd18f53)
- [ETHPrimeConverter](https://bscscan.com/address/0xca430B8A97Ea918fF634162acb0b731445B8195E)
- [XVSVaultConverter](https://bscscan.com/address/0xd5b9AE835F4C59272032B3B954417179573331E0)
- [ConverterNetwork](https://bscscan.com/address/0xF7Caad5CeB0209165f2dFE71c92aDe14d0F15995)

#### References

- [Pull request with the Token Converter contracts](https://github.com/VenusProtocol/protocol-reserve/pull/9)
- [Simulation post upgrade](https://github.com/VenusProtocol/vips/pull/49)
- [Documentation](https://docs-v4.venus.io/whats-new/token-converter)`,

    forDescription: "Execute this proposal",
    againstDescription: "Do not execute this proposal",
    abstainDescription: "Indifferent to execution",
  };

  return makeProposal(
    [
      ...acceptOwnershipCommandsAllConverters,
      {
        target: XVS_VAULT_TREASURY,
        signature: "acceptOwnership()",
        params: [],
      },
      {
        target: CONVERTER_NETWORK,
        signature: "acceptOwnership()",
        params: [],
      },
      ...callPermissionCommandsAllConverter,
    ],
    meta,
    ProposalType.REGULAR,
  );
};

export default vip245;
